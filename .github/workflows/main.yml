name: Build Kernel (Manual)

on:
  workflow_dispatch:
    inputs:
      BUILD_TARGET:
        description: 'Build target (e.g., gts8_kor_openx)'
        required: true
        default: 'gts8_kor_openx'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      BUILD_TARGET: ${{ github.event.inputs.BUILD_TARGET }}
      TARGET_BUILD_VARIANT: user

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install build dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            bc bison flex libssl-dev make \
            gcc build-essential libncurses-dev \
            wget unzip git

      - name: Download Toolchain (manual step required)
        run: |
          echo "Please manually download and extract the toolchain from:"
          echo "https://opensource.samsung.com/uploadSearch?searchValue=Galaxy-Tab-S8"
          echo "Extract to kernel_platform/prebuilts or kernel_platform/prebuilts-master"
          # You may use wget/curl if the download is automatable

      - name: Set up environment variables
        run: |
          export MODEL=$(echo $BUILD_TARGET | cut -d'_' -f1)
          export PROJECT_NAME=${MODEL}
          export REGION=$(echo $BUILD_TARGET | cut -d'_' -f2)
          export CARRIER=$(echo $BUILD_TARGET | cut -d'_' -f3)
          export TARGET_BUILD_VARIANT=user
          CHIPSET_NAME=waipio
          export ANDROID_BUILD_TOP=$(pwd)
          export TARGET_PRODUCT=gki
          export TARGET_BOARD_PLATFORM=gki
          export ANDROID_PRODUCT_OUT=${ANDROID_BUILD_TOP}/out/target/product/${MODEL}
          export OUT_DIR=${ANDROID_BUILD_TOP}/out/msm-${CHIPSET_NAME}-${CHIPSET_NAME}-${TARGET_PRODUCT}
          export KBUILD_EXTRA_SYMBOLS=${ANDROID_BUILD_TOP}/out/vendor/qcom/opensource/mmrm-driver/Module.symvers
          export MODNAME=audio_dlkm
          export KBUILD_EXT_MODULES="../vendor/qcom/opensource/datarmnet-ext/wlan \
            ../vendor/qcom/opensource/datarmnet/core \
            ../vendor/qcom/opensource/mmrm-driver \
            ../vendor/qcom/opensource/audio-kernel \
            ../vendor/qcom/opensource/camera-kernel \
            ../vendor/qcom/opensource/display-drivers/msm \
          "
          export PATH=$PATH:$(pwd)/kernel_platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9/bin

      - name: Build Kernel
        run: |
          chmod +x ./kernel_platform/build/android/prepare_vendor.sh
          RECOMPILE_KERNEL=1 ./kernel_platform/build/android/prepare_vendor.sh sec gki

      - name: List output files
        run: |
          ls -al arch/*/boot/Image || true
          find drivers/ -name '*.ko' || true

      - name: Upload Kernel Image
        uses: actions/upload-artifact@v4
        with:
          name: Kernel-Image
          path: |
            arch/*/boot/Image
            drivers/**/*.ko
